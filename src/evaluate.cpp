#include "../include/defs.hpp"
#include "../include/Board.hpp"



 
int pieceEval[13][64]={

    {
100 , 100 , 100 , 100 , 100 , 100 , 100 , 100 , 
110 , 110 , 100 , 90 , 90 , 100 , 110 , 110 , 
105 , 100 , 100 , 105 , 105 , 100 , 100 , 105 , 
100 , 100 , 110 , 120 , 120 , 110 , 100 , 100 , 
105 , 105 , 105 , 110 , 110 , 105 , 105 , 105 , 
110 , 110 , 110 , 120 , 120 , 110 , 110 , 110 , 
120 , 120 , 120 , 130 , 130 , 120 , 120 , 120 , 
100 , 100 , 100 , 100 , 100 , 100 , 100 , 100 , 
},

{
100 , 100 , 100 , 100 , 100 , 100 , 100 , 100 , 
110 , 110 , 100 , 90 , 90 , 100 , 110 , 110 , 
105 , 100 , 100 , 105 , 105 , 100 , 100 , 105 , 
100 , 100 , 110 , 120 , 120 , 110 , 100 , 100 , 
105 , 105 , 105 , 110 , 110 , 105 , 105 , 105 , 
110 , 110 , 110 , 120 , 120 , 110 , 110 , 110 , 
120 , 120 , 120 , 130 , 130 , 120 , 120 , 120 , 
100 , 100 , 100 , 100 , 100 , 100 , 100 , 100 , 
},

{
320 , 310 , 320 , 320 , 320 , 320 , 310 , 320 , 
320 , 320 , 320 , 325 , 325 , 320 , 320 , 320 , 
320 , 320 , 330 , 330 , 330 , 330 , 320 , 320 , 
320 , 320 , 330 , 340 , 340 , 330 , 325 , 320 , 
325 , 330 , 335 , 340 , 340 , 335 , 330 , 325 , 
325 , 330 , 330 , 340 , 340 , 330 , 330 , 325 , 
320 , 320 , 325 , 330 , 330 , 325 , 320 , 320 , 
320 , 320 , 320 , 320 , 320 , 320 , 320 , 320 , 
},

{
330 , 330 , 320 , 330 , 330 , 320 , 330 , 330 , 
330 , 330 , 330 , 340 , 340 , 330 , 330 , 330 , 
330 , 330 , 340 , 345 , 345 , 340 , 330 , 330 , 
330 , 340 , 345 , 350 , 350 , 345 , 340 , 330 , 
330 , 340 , 345 , 350 , 350 , 345 , 340 , 330 , 
330 , 330 , 340 , 345 , 345 , 340 , 330 , 330 , 
330 , 330 , 330 , 340 , 340 , 330 , 330 , 330 , 
330 , 330 , 330 , 330 , 330 , 330 , 330 , 330 , 
},

{
500 , 500 , 505 , 510 , 510 , 505 , 500 , 500 , 
500 , 500 , 505 , 510 , 510 , 505 , 500 , 500 , 
500 , 500 , 505 , 510 , 510 , 505 , 500 , 500 , 
500 , 500 , 505 , 510 , 510 , 505 , 500 , 500 , 
500 , 500 , 505 , 510 , 510 , 505 , 500 , 500 , 
500 , 500 , 505 , 510 , 510 , 505 , 500 , 500 , 
525 , 525 , 525 , 525 , 525 , 525 , 525 , 525 , 
500 , 500 , 505 , 510 , 510 , 505 , 500 , 500 , 
},

{
900 , 900 , 895 , 910 , 910 , 895 , 900 , 900 , 
900 , 900 , 905 , 920 , 920 , 905 , 900 , 900 , 
900 , 900 , 915 , 925 , 925 , 915 , 900 , 900 , 
900 , 910 , 920 , 930 , 930 , 920 , 910 , 900 , 
900 , 910 , 920 , 930 , 930 , 920 , 910 , 900 , 
905 , 900 , 915 , 925 , 925 , 915 , 900 , 905 , 
905 , 925 , 925 , 935 , 935 , 925 , 925 , 905 , 
900 , 900 , 900 , 910 , 900 , 900 , 900 , 900 , 
}
,
{0 ,0 ,0 , 0 , 0 , 0 , 0 , 0 ,  
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,}
,

{
100 , 100 , 100 , 100 , 100 , 100 , 100 , 100 , 
120 , 120 , 120 , 130 , 130 , 120 , 120 , 120 , 
110 , 110 , 110 , 120 , 120 , 110 , 110 , 110 , 
105 , 105 , 105 , 110 , 110 , 105 , 105 , 105 , 
100 , 100 , 110 , 120 , 120 , 110 , 100 , 100 , 
105 , 100 , 100 , 105 , 105 , 100 , 100 , 105 , 
110 , 110 , 100 , 90 , 90 , 100 , 110 , 110 , 
100 , 100 , 100 , 100 , 100 , 100 , 100 , 100 , 
},



{
320 , 320 , 320 , 320 , 320 , 320 , 320 , 320 , 
320 , 320 , 325 , 330 , 330 , 325 , 320 , 320 , 
325 , 330 , 330 , 340 , 340 , 330 , 330 , 325 , 
325 , 330 , 335 , 340 , 340 , 335 , 330 , 325 , 
320 , 320 , 330 , 340 , 340 , 330 , 325 , 320 , 
320 , 320 , 330 , 330 , 330 , 330 , 320 , 320 , 
320 , 320 , 320 , 325 , 325 , 320 , 320 , 320 , 
320 , 310 , 320 , 320 , 320 , 320 , 310 , 320 , 
},

{
330 , 330 , 330 , 330 , 330 , 330 , 330 , 330 , 
330 , 330 , 330 , 340 , 340 , 330 , 330 , 330 , 
330 , 330 , 340 , 345 , 345 , 340 , 330 , 330 , 
330 , 340 , 345 , 350 , 350 , 345 , 340 , 330 , 
330 , 340 , 345 , 350 , 350 , 345 , 340 , 330 , 
330 , 330 , 340 , 345 , 345 , 340 , 330 , 330 , 
330 , 330 , 330 , 340 , 340 , 330 , 330 , 330 , 
330 , 330 , 320 , 330 , 330 , 320 , 330 , 330 , 
},

{
500 , 500 , 505 , 510 , 510 , 505 , 500 , 500 , 
525 , 525 , 525 , 525 , 525 , 525 , 525 , 525 , 
500 , 500 , 505 , 510 , 510 , 505 , 500 , 500 , 
500 , 500 , 505 , 510 , 510 , 505 , 500 , 500 , 
500 , 500 , 505 , 510 , 510 , 505 , 500 , 500 , 
500 , 500 , 505 , 510 , 510 , 505 , 500 , 500 , 
500 , 500 , 505 , 510 , 510 , 505 , 500 , 500 , 
500 , 500 , 505 , 510 , 510 , 505 , 500 , 500 , 
},

{
900 , 900 , 900 , 910 , 900 , 900 , 900 , 900 , 
905 , 925 , 925 , 935 , 935 , 925 , 925 , 905 , 
905 , 900 , 915 , 925 , 925 , 915 , 900 , 905 , 
900 , 910 , 920 , 930 , 930 , 920 , 910 , 900 , 
900 , 910 , 920 , 930 , 930 , 920 , 910 , 900 , 
900 , 900 , 915 , 925 , 925 , 915 , 900 , 900 , 
900 , 900 , 905 , 920 , 920 , 905 , 900 , 900 , 
900 , 900 , 895 , 910 , 910 , 895 , 900 , 900 , 
},
{0 ,0 ,0 , 0 , 0 , 0 , 0 , 0 ,  
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,}




};




void Board_State::increment_evalPos(Square sq , Piece piece , bool add ){
    if(add){
    eval[piece.get_piece_color()] += pieceEval[piece.pieceType][sq.squareNo];
    }
    else{
         eval[piece.get_piece_color()]-= pieceEval[piece.pieceType][sq.squareNo];
    }
    
}

int evalPos(Board_State board){
    if(board.side==WHITE){ 
        return board.eval[0]-board.eval[1];
    }
    else{
        return board.eval[1]-board.eval[0];
    }
}